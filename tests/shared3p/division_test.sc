/*
 * Copyright (C) 2015 Cybernetica
 *
 * Research/Commercial License Usage
 * Licensees holding a valid Research License or Commercial License
 * for the Software may use this file according to the written
 * agreement between you and Cybernetica.
 *
 * GNU Lesser General Public License Usage
 * Alternatively, this file may be used under the terms of the GNU Lesser
 * General Public License version 3 as published by the Free Software
 * Foundation and appearing in the file LICENSE.LGPLv3 included in the
 * packaging of this file.  Please review the following information to
 * ensure the GNU Lesser General Public License version 3 requirements
 * will be met: http://www.gnu.org/licenses/lgpl-3.0.html.
 *
 * For further information, please contact us at sharemind@cyber.ee.
 */

import shared3p;
import stdlib;
import test_utility;

domain pd_shared3p shared3p;

template<domain D, type T>
void divTest(string name, D T[[1]] x, D T[[1]] y, T[[1]] z) {
   test("[$name\] Division with two private values", all(declassify(x / y) == z));
}

void uint8DivTest() {
   pd_shared3p uint8[[1]] x (10) = {174, 0, UINT8_MAX - 1, 107, 43, 182, 13, 28, 184, 76};
   pd_shared3p uint8[[1]] y (10) = {15, 15, UINT8_MAX, 202, 42, 211, 107, 184, 45, 79};
   uint8[[1]] z (10) = {11, 0, 0, 0, 1, 0, 0, 0, 4, 0};
   divTest("uint8", x, y, z);
}

void uint16DivTest() {
   pd_shared3p uint16[[1]] x (10) = {45876, 0, UINT16_MAX - 1, 32580, 28143, 30398, 47283, 48041, 12278, 42202};
   pd_shared3p uint16[[1]] y (10) = {175, 175, UINT16_MAX, 14693, 22744, 34449, 58190, 25180, 882, 42797};
   uint16[[1]] z (10) = {262, 0, 0, 2, 1, 0, 0, 1, 13, 0};
   divTest("uint16", x, y, z);
}

void uint32DivTest() {
   pd_shared3p uint32[[1]] x (10) = {21798357, 0, UINT32_MAX - 1, 1079384478, 2261182555, 338606446, 775302438, 3003581665, 1646720950, 4082519954};
   pd_shared3p uint32[[1]] y (10) = {2398, 2398, UINT32_MAX, 2703159056, 131634797, 3374830731, 851673291, 3623133312, 2296214955, 3245316103};
   uint32[[1]] z (10) = {9090, 0, 0, 0, 17, 0, 0, 0, 0, 1};
   divTest("uint32", x, y, z);
}

void uint64DivTest() {
   pd_shared3p uint64[[1]] x (10) = {1872698523698, 0, UINT64_MAX - 1, 14153460087444749705, 12343329379638099274, 10897060826723379588, 17874006642868929947, 5299953365151909498, 14512684195513553964, 3430982392811976967};
   pd_shared3p uint64[[1]] y (10) = {2578953, 2578953, UINT64_MAX, 7909230950479169642, 15930648005381877304, 14128432587825544195, 200800327787477002, 1740196584730791021, 15702793034302958185, 13767204910012762350};
   uint64[[1]] z (10) = {726146, 0, 0, 1, 0, 0, 89, 3, 0, 0};
   divTest("uint64", x, y, z);
}

template<domain D, type T>
void modTest(string name, D T[[1]] x, D T[[1]] y, T[[1]] z) {
   test("[$name\] Modulo private values", all(declassify(x % y) == z));
}

void uint8ModTest() {
   pd_shared3p uint8[[1]] x (10) = {174, 0, 1, UINT8_MAX, 2, 105, 162, 84, 195, 196};
   pd_shared3p uint8[[1]] y (10) = {15, 1, 1, UINT8_MAX, 80, 84, 48, 198, 36, 171};
   uint8[[1]] z (10) = {9, 0, 0, 0, 2, 21, 18, 84, 15, 25};
   modTest("uint8", x, y, z);
}

void uint16ModTest() {
   pd_shared3p uint16[[1]] x (10) = {45876, 0, 1, UINT16_MAX, 42704, 21235, 53828, 47172, 53143, 20540};
   pd_shared3p uint16[[1]] y (10) = {175, 1, 1, UINT16_MAX, 8387, 53688, 43118, 25493, 45759, 19152};
   uint16[[1]] z (10) = {26, 0, 0, 0, 769, 21235, 10710, 21679, 7384, 1388};
   modTest("uint16", x, y, z);
}

void uint32ModTest() {
   pd_shared3p uint32[[1]] x (10) = {21798357, 0, 1, UINT32_MAX, 2671752757, 2729280231, 2054646346, 1296087542, 2513472559, 3827659690};
   pd_shared3p uint32[[1]] y (10) = {2398, 1, 1, UINT32_MAX, 2970657113, 1218519749, 322737441, 1034451649, 1245922416, 3220861984};
   uint32[[1]] z (10) = {537, 0, 0, 0, 2671752757, 292240733, 118221700, 261635893, 21627727, 606797706};
   modTest("uint32", x, y, z);
}

void uint64ModTest() {
   pd_shared3p uint64[[1]] x (10) = {1872698523698, 0, 1, UINT64_MAX, 2911197247836206231, 11779695373037731474, 12331135118952949625, 18423714812283352844, 4399035082396326458, 3170758563397194192};
   pd_shared3p uint64[[1]] y (10) = {2578953, 1, 1, UINT64_MAX, 15068055164583862637, 10491989979906224377, 7981981313118482348, 8428521183430222610, 16717383117636671846, 15670214433620879587};
   uint64[[1]] z (10) = {2118560, 0, 0, 0, 2911197247836206231, 1287705393131507097, 4349153805834467277, 1566672445422907624, 4399035082396326458, 3170758563397194192};
   modTest("uint64", x, y, z);
}

template<domain D, type T>
void pubDivTest(string name, D T[[1]] x, T[[1]] y, T[[1]] z) {
   test("[$name\] Division of private values by public values", all(declassify(x / y) == z));
}

void uint8PubDivTest() {
   pd_shared3p uint8[[1]] x (10) = {15, 226, 246, 102, 123, 191, 161, 69, 197, 188};
   uint8[[1]] y (10) = {174, 252, 215, 127, 208, 16, 35, 116, 94, 98};
   uint8[[1]] z (10) = {0, 0, 1, 0, 0, 11, 4, 0, 2, 1};
   pubDivTest("uint8", x, y, z);
}

void uint16PubDivTest() {
   pd_shared3p uint16[[1]] x (10) = {175, 39003, 10694, 54476, 40217, 50216, 51787, 10828, 12552, 45873};
   uint16[[1]] y (10) = {45876, 6583, 13622, 29990, 43617, 20790, 48739, 20468, 23877, 7487};
   uint16[[1]] z (10) = {0, 5, 0, 1, 0, 2, 1, 0, 0, 6};
   pubDivTest("uint16", x, y, z);
}

void uint32PubDivTest() {
   pd_shared3p uint32[[1]] x (10) = {2398, 1732631771, 205548898, 2130510575, 2150871568, 2941911925, 3293277434, 3667950681, 1224910420, 406036453};
   uint32[[1]] y (10) = {21798357, 2416140118, 1309277004, 1585771306, 487258741, 3720054331, 195889949, 1531844351, 2575878619, 3402071448};
   uint32[[1]] z (10) = {0, 0, 0, 1, 4, 0, 16, 2, 0, 0};
   pubDivTest("uint32", x, y, z);
}

void uint64PubDivTest() {
   pd_shared3p uint64[[1]] x (10) = {2578953, 12245908974844136796, 17937976683955939956, 4140771630009673778, 17869750892920301528, 440270727559510020, 1861430483195125528, 16627380993100091891, 14699758334034967836, 5561725853456309917};
   uint64[[1]] y (10) = {1872698523698, 12687893693077182479, 1922307544830625184, 6730948402295056808, 14644726399228145086, 16590649451811788539, 14094663659465141644, 13985204231407938272, 433214406157452071, 11762065014809411117};
   uint64[[1]] z (10) = {0, 0, 9, 0, 1, 0, 0, 1, 33, 0};
   pubDivTest("uint64", x, y, z);
}

template<domain D, type T>
void pubDiv2Test(string name, T[[1]] x, D T[[1]] y, T[[1]] z) {
   test("[$name\] Division of public values by private values", all(declassify(x / y) == z));
}

void uint8PubDiv2Test() {
   uint8[[1]] x (10) = {174, 27, 10, 113, 5, 105, 34, 133, 127, 4};
   pd_shared3p uint8[[1]] y (10) = {15, 56, 182, 10, 110, 238, 183, 187, 28, 191};
   uint8[[1]] z (10) = {11, 0, 0, 11, 0, 0, 0, 0, 4, 0};
   pubDiv2Test("uint8", x, y, z);
}

void uint16PubDiv2Test() {
   uint16[[1]] x (10) = {45876, 61606, 43353, 14479, 32476, 1030, 52612, 23628, 49106, 60133};
   pd_shared3p uint16[[1]] y (10) = {175, 26821, 25267, 51976, 13659, 40546, 36237, 10768, 18095, 61531};
   uint16[[1]] z (10) = {262, 2, 1, 0, 2, 0, 1, 2, 2, 0};
   pubDiv2Test("uint16", x, y, z);
}

void uint32PubDiv2Test() {
   uint32[[1]] x (10) = {21798357, 4249756131, 1333534194, 3617676351, 30607375, 1529787088, 3512288422, 3291561687, 1061027466, 888123770};
   pd_shared3p uint32[[1]] y (10) = {2398, 2412529337, 1579806440, 3864262101, 2627218139, 3265968448, 1217971248, 4284433903, 3473211887, 3203288819};
   uint32[[1]] z (10) = {9090, 1, 0, 0, 0, 0, 2, 0, 0, 0};
   pubDiv2Test("uint32", x, y, z);
}

void uint64PubDiv2Test() {
   uint64[[1]] x (10) = {1872698523698, 13685930876051834170, 18154554730404189399, 13546882904490873590, 6096716823158794744, 18273477242977097042, 10870199133632485705, 8569743480253450268, 3238902738914773102, 1299532555226393862};
   pd_shared3p uint64[[1]] y (10) = {2578953, 6991214299871818141, 15251123197842023804, 3096730956383777420, 16970149297657829443, 7059332484037144229, 6227057716043180957, 1659859331836950316, 14826204673959003989, 8039842699533552607};
   uint64[[1]] z (10) = {726146, 1, 1, 4, 0, 2, 1, 5, 0, 0};
   pubDiv2Test("uint64", x, y, z);
}

template<domain D, type T>
void pubModTest(string name, D T[[1]] x, T[[1]] y, T[[1]] z) {
   test("[$name\] Modulo private by public", all(declassify(x % y) == z));
}

void uint8PubModTest() {
   pd_shared3p uint8[[1]] x (10) = {174, 218, 228, 130, 189, 66, 101, 174, 83, 175};
   uint8[[1]] y (10) = {15, 202, 32, 102, 43, 227, 209, 115, 174, 165};
   uint8[[1]] z (10) = {9, 16, 4, 28, 17, 66, 101, 59, 83, 10};
   pubModTest("uint8", x, y, z);
}

void uint16PubModTest() {
   pd_shared3p uint16[[1]] x (10) = {45876, 9380, 33621, 64480, 22890, 4244, 26633, 10054, 22406, 38361};
   uint16[[1]] y (10) = {175, 25886, 22366, 2364, 31548, 2354, 4608, 17636, 10471, 8452};
   uint16[[1]] z (10) = {26, 9380, 11255, 652, 22890, 1890, 3593, 10054, 1464, 4553};
   pubModTest("uint16", x, y, z);
}

void uint32PubModTest() {
   pd_shared3p uint32[[1]] x (10) = {21798357, 3976963269, 827334212, 4027146638, 4260594228, 1309801651, 589398540, 3502631915, 646211275, 1715556098};
   uint32[[1]] y (10) = {2398, 2708292770, 1677884368, 257990873, 2327124925, 1627031270, 464313654, 2744077644, 1386785397, 2677176152};
   uint32[[1]] z (10) = {537, 1268670499, 827334212, 157283543, 1933469303, 1309801651, 125084886, 758554271, 646211275, 1715556098};
   pubModTest("uint32", x, y, z);
}

void uint64PubModTest() {
   pd_shared3p uint64[[1]] x (10) = {1872698523698, 9723731439371086165, 9250592532159299509, 7611013649564068203, 7685234518857239253, 16223210403436419083, 6831119082065921284, 8025047480433901202, 12245577879042884982, 10437159370554455402};
   uint64[[1]] y (10) = {2578953, 10540527179394064920, 1943402526562248020, 11048720352904450088, 9970375737656912185, 5938136369403135067, 324319081429504175, 14509613299573378983, 4571685159696170240, 6400842146760471562};
   uint64[[1]] z (10) = {2118560, 9723731439371086165, 1476982425910307429, 7611013649564068203, 7685234518857239253, 4346937664630148949, 20418372046333609, 8025047480433901202, 3102207559650544502, 4036317223793983840};
   pubModTest("uint64", x, y, z);
}

template<domain D, type T>
void pubMod2Test(string name, T[[1]] x, D T[[1]] y, T[[1]] z) {
   test("[$name\] Modulo public by private", all(declassify(x % y) == z));
}

void uint8PubMod2Test() {
   uint8[[1]] x (10) = {174, 39, 107, 194, 215, 89, 240, 198, 230, 2};
   pd_shared3p uint8[[1]] y (10) = {15, 20, 252, 47, 165, 177, 220, 195, 193, 229};
   uint8[[1]] z (10) = {9, 19, 107, 6, 50, 89, 20, 3, 37, 2};
   pubMod2Test("uint8", x, y, z);
}

void uint16PubMod2Test() {
   uint16[[1]] x (10) = {45876, 60843, 18509, 23419, 29112, 58302, 59099, 55724, 21095, 18247};
   pd_shared3p uint16[[1]] y (10) = {175, 36042, 58322, 23607, 50405, 10289, 9350, 58547, 65015, 21236};
   uint16[[1]] z (10) = {26, 24801, 18509, 23419, 29112, 6857, 2999, 55724, 21095, 18247};
   pubMod2Test("uint16", x, y, z);
}

void uint32PubMod2Test() {
   uint32[[1]] x (10) = {21798357, 2812661512, 4124140521, 383394607, 1145718758, 4060058436, 2894866056, 518780124, 2542640765, 3494735242};
   pd_shared3p uint32[[1]] y (10) = {2398, 1250864066, 1890840321, 2736436464, 4036598200, 2529807380, 420882880, 3032514550, 1719665157, 3199879188};
   uint32[[1]] z (10) = {537, 310933380, 342459879, 383394607, 1145718758, 1530251056, 369568776, 518780124, 822975608, 294856054};
   pubMod2Test("uint32", x, y, z);
}

void uint64PubMod2Test() {
   uint64[[1]] x (10) = {1872698523698, 7142347543082844216, 16389096626953044700, 8127516426181866075, 17601200455051363316, 3655852219715798627, 2305704896652438897, 6856400545701865703, 7971105513009993857, 8433726276306728511};
   pd_shared3p uint64[[1]] y (10) = {2578953, 2208549501672613698, 1192371520460116560, 1370870876102094325, 7546740535924495784, 9497050407179066987, 17138096482212534470, 2169839279283467754, 9520160212797013616, 5198400890229854932};
   uint64[[1]] z (10) = {2118560, 516699038065003122, 888266860971529420, 1273162045671394450, 2507719383202371748, 3655852219715798627, 2305704896652438897, 346882707851462441, 7971105513009993857, 3235325386076873579};
   pubMod2Test("uint64", x, y, z);
}

void main() {
    uint8DivTest();
    uint16DivTest();
    uint32DivTest();
    uint64DivTest();
    uint8ModTest();
    uint16ModTest();
    uint32ModTest();
    uint64ModTest();
    uint8PubDivTest();
    uint16PubDivTest();
    uint32PubDivTest();
    uint64PubDivTest();
    uint8PubDiv2Test();
    uint16PubDiv2Test();
    uint32PubDiv2Test();
    uint64PubDiv2Test();
    uint8PubModTest();
    uint16PubModTest();
    uint32PubModTest();
    uint64PubModTest();
    uint8PubMod2Test();
    uint16PubMod2Test();
    uint32PubMod2Test();
    uint64PubMod2Test();

    test_report();
}

