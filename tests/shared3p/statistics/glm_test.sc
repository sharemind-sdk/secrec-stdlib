/*
 * Copyright (C) 2015 Cybernetica
 *
 * Research/Commercial License Usage
 * Licensees holding a valid Research License or Commercial License
 * for the Software may use this file according to the written
 * agreement between you and Cybernetica.
 *
 * GNU Lesser General Public License Usage
 * Alternatively, this file may be used under the terms of the GNU Lesser
 * General Public License version 3 as published by the Free Software
 * Foundation and appearing in the file LICENSE.LGPLv3 included in the
 * packaging of this file.  Please review the following information to
 * ensure the GNU Lesser General Public License version 3 requirements
 * will be met: http://www.gnu.org/licenses/lgpl-3.0.html.
 *
 * For further information, please contact us at sharemind@cyber.ee.
 */

import stdlib;
import shared3p;
import shared3p_statistics_glm;
import test_utility;
import matrix;
import shared3p_matrix;

domain pd_shared3p shared3p;

float64[[1]] gaussDependent = {808, 372, -279, -499, 107};
float64[[2]] gaussVariables = reshape({151, 25, 53, 60, -43, -31, -162, 147, -47, 174}, 5, 2);

float64[[1]] binomialDependent = {1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1};
float64[[2]] binomialVariables = reshape({0.192491906485068, 1.16220980882552, -1.44670180633351, 0.356993279140054, -0.323180534047634, -0.942337112067841, 1.62229611652493, -1.15256860767368, -0.689024123596357, -0.383855488809997, 2.04212222261495, 0.010314308136789, 0.94377911190294, -1.04593866080535, 2.0819268787991, -0.702270397476123, 1.91711727878331, -0.297296211117881, -0.414812239592928, 0.642910358357436, 1.03285349943413, -1.01157429067202, -1.67856959219527, -1.02375380736812, 0.157549690345431, -0.782264488092877, 1.48913611644558, -2.68938717611638, -0.0757895625491196, -0.329542362474965, 1.27178094415894, 0.00995213168528942, 0.641673407672177, -1.90832165473963, 0.800761254937157, 0.666267144885476, 1.86265922566283, 0.366913581190904, -0.545356026768875, -0.82583816011191, 0.619277810751181, 1.93277551115607, 0.122640425510084, -1.41545327649818, -0.790984165426082, 0.528841793484205, -0.499771670185565, -2.43855953952626, -1.63515201379241, -0.821539162962545, 1.78456731932523, 0.144782745429489, 0.298878272130168, 0.727671485607025, 0.752504894134308, -1.97906001942315, -1.0746021434363, -0.303561484873409, 0.0642737442852427, 0.720578810691503, 1.26264947910893, 0.790773066959559, 1.09994929620937, 0.654422052192035, -1.1235551287923, 0.180055415881364, 3.44607885263655, 0.909782101741457, -0.719722171975663, -0.765107616909881, -0.326854097538061, 0.731212979289673, -0.529773969939608, -0.0689415455320158, 0.524152744449217, -0.0390049933534613, -1.07960964710456, 2.25805485428112, -0.0551110192012596, -1.03556291390431, 2.19868418440574, -1.45997078641485, -1.77390932861561, -0.653713001712145, 0.0650322264968479, 1.45913248897191, 0.654970382227184, -1.56834866856545, -0.712869108984741, 0.522401346810815, 1.02056753963664, 1.19867779070589, 0.631614719104035, 1.25265611776762, 0.447433352715578, -0.205898722432143, 0.46653706410743, 0.407715569709724, -0.698260607801304, -0.757331113068643, -0.0364545549891273, -1.53255511557527, 1.11796616966172, 0.89733213831729, -0.700082526588769, -2.21492172424669, -1.12404817684733, 0.490128578257527, -0.613067279769948, 0.542955954287804, 1.0124427078704, 0.123412391800329, -2.34387016225648, 0.104650899136035, 0.590263090765572, 0.440673420001196, 0.319134335954064, 0.255793184164672, 0.701606446446144, -0.518196868014743, -1.37745713011894, 0.159107047640942, 0.312645878331935, 0.361523892174249, 1.12084757792623, -2.3795046169697, 0.471830889601426, 0.758485526078199, 1.12768532158238, 0.617614605175459, 0.677723136956796, 0.0201160671064658, 1.51023991796017, -0.0333062566640829, 2.06103434972008, -1.10757270221079, -0.650315911712134, -1.33089411309027, -1.32423767322648, 0.564862165254588, 0.659471306008216, -1.4074136393169, -0.221425147029485, -1.25924884973445, -0.962159108013107, -0.0915005482757419, 0.187460191901963, -1.32246030106757, 0.0122446299638798, 1.09019804341232, 0.712283738662221, -0.406102067902622, -0.75372580758771, -0.121274790831859, 0.0381899311090272, 0.0642766942527122, 1.17842106332971, -2.25094930436191, -0.153203849225914, 0.637188793351822, -0.161697533088855, -0.47946600142622, 1.46026211199572, -0.950768571791109, 2.00945843644218, 0.776773569175611, -0.0779382178062895, 1.11150668088353, 1.35434207726471, -0.054734782692216, -1.02718379236429, -0.627066469530978, -1.04117532037133, -1.00838960055382, -0.870623015185247, -0.74053781159137, 0.853130218283811, 0.545354802788642, -0.62276019340198, 3.40638747045328, 1.21570986644231, 0.543827890819271, -1.62140874931062, 0.061612087047212, -0.0685753287933945, -0.654328095055235, -0.0629829245597959, -0.739961061548156, 1.0757077107907, 0.127342996848538, 1.12910075258143, -0.329952849065807, 0.450146726206542, 1.27783054994698, 0.0505864422922585, -1.34485333989615, -0.124330218453677, 0.459774043071752, 0.912011458939158, 0.573784595630058, 0.209976795351986, 0.714741783342, -0.385029307386886, -0.540005912816246, 1.37178507132468, -0.836144422285538, 0.158983203449421, 1.89809394518361, -0.20485705417754, 0.0794326514531647, -0.85209216039655, -1.34442562449036, -0.80947218121497, 1.61370472876354, 0.533398962006708, 0.673798436917901, 0.0687384672052418, 1.42531584285832, -0.736781481290107, -0.354730650788196, -0.469162098093487, -0.40050408670979, -0.674665999424711, -0.157517370720428, -0.739777828401799, -0.327964925296031, 1.19722696693997, -1.030759902027, 0.377740338616032, 0.686373486203384, 0.274782058358951, 0.815567257587602, -0.903960009892077, 1.59479369316894, 0.404833208799774, -1.31581283100835, -0.239143842152438, 0.71464700210765, 1.07431935823545, 0.652115219323936, -0.314750595912691, 0.300969892991917, 0.106700463707837, -0.259890431931118, -0.542215759109661, 1.20536696608072, -1.46570030266356, -0.388823459731673, -0.134014390252064, -0.554400274686844, 1.29119985289661, 0.444936519053759, -0.447032929579717, -1.69666115050351, -0.63019956799684, -0.709742376014681, -0.580977998161936, -0.550172696004294, -2.32015947185109, -0.193654073119116, -0.645904406840657, 0.582816418021863, 0.299405913715323, -1.7000069358407, -0.437720500276476, 0.288193277441894, -0.417938601778003, -0.414354863614747, 1.70627165670033, 1.71830848971484, 0.410388459427429, -0.595617660650038, 1.28239810807579, 0.104349050482726, 1.44700474627407, 1.12091044545374, 3.10367379684608, -0.669904452707554, 0.583767184528977, -0.94960211026896, -0.254551418649757, -0.43123630641822, -0.91055343643972, -1.26439098531291, 0.113976584583962, 1.8507856101592, -1.04827752413141, 0.251738933447207, 0.283319474324347, -1.3484155474276, 0.197095372336846, 0.945854119581912, -0.252573198922617, -0.880558112875104, 0.998675870924944, 0.557067841240877, -0.107876128854289, 0.183054081237607, 2.20873850039652, -0.915308908088369, -1.682838895363, -1.86650873193058, -0.790380036429825, 0.721913026088695, 0.593391532302035, -0.150859499480242, -0.130904985204773, -0.684098289229536, 1.42397245166497, -1.50519424881236, -0.336474702337569, -0.927167175546523, -0.167620341518812, -0.253497587777778, -1.383416996438, -0.893027462465388, -0.289494666864298, -1.57712840102386, -0.997000489178881, 1.04425542662969, -0.387187387253363, 0.469746785296561, -0.809521199751465, 0.75686220110084, -0.86600469189111, 0.33657975597907, 0.702407341421774, -1.49324791572302, -0.168012286768665, 0.112731314145829, -0.754085202002748, -1.46897981573747, -0.0542304698743433, 1.30945952740271, -0.638815390007925, -0.0677668237276316, -0.154573210471646, 0.346875375815961, 1.57088231391889, -0.377700434720121, 1.20115725758097, -1.05912761402028, -0.852213774884362, -0.255623882174638, 0.899019904313895, 0.280227096627652, -0.00717046050369089, 0.905704415196136, -0.815786121130992, 2.16338283255862, 0.421949204500009, -0.426710540709543, 0.563885485248005, 1.52987120630893, 1.29160012493554, 0.335445930085467, -0.522821583716901, 0.291209394627715, 1.50627179983033, -0.0014469259733645, 0.552862461251104, 0.10367765086263, -0.102250353260507, -0.508717181167268, -0.0512518194295991, 0.778561989886336, -2.47442806102061, 0.0341767394581964, -0.64952770016031, -0.174187612764572, -1.15408772762604, 0.641121391348444, 1.54842553381674, -0.886782155358425, 0.456484951620913, -0.193151475539735, -1.13708263578448, 0.165420136480471, 0.649514757261203, 1.07299669709201, -0.211247345119217, 1.28314848572191, 0.477014072620505, -0.666646245539657, -1.4588261966791, -1.02457270737145, 1.78860082573771, -0.662018721367169, -0.133852422007237, -0.139495183050913, 2.03170768929948, -1.22847062127265, 0.313590633692139, 0.527271829757913, 0.131015177384889, -1.21267957466656, -0.943208799235109, 0.23098493267282, 2.92890561384552, -0.0561235829980545}, 200, 2);

template<type T, type G>
bool glm_test_gaussian (T proxy, G proxy2) {
    pd_shared3p T[[1]] dependent = (T) gaussDependent;
    pd_shared3p T[[2]] variables = (T) gaussVariables;

    G[[1]] correct = {4.95141885879185, 1.99690198083159, -0.434027517967568};
    G[[1]] result = declassify (generalizedLinearModel (dependent, variables,
                                                        GLM_FAMILY_GAUSSIAN,
                                                        1 :: uint).coefficients);

    return isNegligible(sum(abs(result - correct)));
}


template<type T>
bool glm_test_binomial_logit (T proxy) {
    pd_shared3p T[[1]] dependent = (T) binomialDependent;
    pd_shared3p T[[2]] variables = (T) binomialVariables;

    T[[1]] correct = {4.49031902143858, 3.56005593083577, 2.84826778724822};
    T[[1]] result = declassify(generalizedLinearModel(dependent,
                                                      variables,
                                                      GLM_FAMILY_BINOMIAL_LOGIT,
                                                      10 :: uint).coefficients);
    return isNegligible(sum(abs(result - correct)));
}

template<type T>
bool glm_test_gaussian_standard_errors (T proxy) {
    pd_shared3p T[[1]] dependent = (T) gaussDependent;
    pd_shared3p T[[2]] variables = (T) gaussVariables;

    pd_shared3p T[[1]] params = generalizedLinearModel (dependent, variables,
                                                        GLM_FAMILY_GAUSSIAN,
                                                        1 :: uint).coefficients;

    T[[1]] correct = {0.0678241596985888, 0.0938740634943971, 9.14127043177142};
    T[[1]] result = declassify (parametersStandardErrors (dependent, variables,
                                                          params,
                                                          GLM_FAMILY_GAUSSIAN));
    return isNegligible(sum(abs(result - correct)));
}

template<type T>
bool glm_test_binomial_logit_standard_errors (T proxy) {
    pd_shared3p T[[1]] dependent = (T) binomialDependent;
    pd_shared3p T[[2]] variables = (T) binomialVariables;

    pd_shared3p T[[1]] params = generalizedLinearModel (dependent, variables,
                                                        GLM_FAMILY_BINOMIAL_LOGIT,
                                                        10 :: uint).coefficients;

    T[[1]] correct = {0.840839971932318, 0.660377881063293, 0.594330471217411};
    T[[1]] errors = declassify (parametersStandardErrors (dependent, variables,
                                                          params,
                                                          GLM_FAMILY_BINOMIAL_LOGIT));

    return isNegligible(sum(abs(correct - errors)));
}

template<type T>
bool glm_test_gauss_aic (T proxy) {
    pd_shared3p T[[1]] dependent = (T) gaussDependent;
    pd_shared3p T[[2]] variables = (T) gaussVariables;
    GLMResult<pd_shared3p, T> m = generalizedLinearModel (dependent, variables, GLM_FAMILY_GAUSSIAN, 1 :: uint);
    T aic = declassify (GLMAIC (dependent, m));
    T correct = 27.6760089698144;
    return isNegligible (abs (correct - aic) / correct);
}

template<type T>
bool glm_test_binomial_aic (T proxy) {
    pd_shared3p T[[1]] dependent = (T) binomialDependent;
    pd_shared3p T[[2]] variables = (T) binomialVariables;
    GLMResult<pd_shared3p, T> m = generalizedLinearModel (dependent, variables, GLM_FAMILY_BINOMIAL_LOGIT, 10 :: uint);
    T aic = declassify (GLMAIC (dependent, m));
    T correct = 88.4998910716803;
    return isNegligible (abs (correct - aic) / correct);
}

void main () {
    string test_prefix = "GeneralizedLinearModel(Gaussian)";

    test (test_prefix, glm_test_gaussian (0::int32, 0::float32), 0::int32);
    test (test_prefix, glm_test_gaussian (0::int64, 0::float64), 0::int64);

    test_prefix = "GeneralizedLinearModel(Binomial Logit)";
    test (test_prefix, glm_test_binomial_logit (0::float32), 0::float32);
    test (test_prefix, glm_test_binomial_logit (0::float64), 0::float64);

    test_prefix = "GeneralizedLinearModelStandardErrors(Gaussian)";
    test (test_prefix, glm_test_gaussian_standard_errors (0 :: float32), 0 :: float32);
    test (test_prefix, glm_test_gaussian_standard_errors (0 :: float64), 0 :: float64);

    test_prefix = "GeneralizedLinearModelStandardErrors(Binomial Logit)";
    test (test_prefix, glm_test_binomial_logit_standard_errors (0 :: float32), 0 :: float32);
    test (test_prefix, glm_test_binomial_logit_standard_errors (0 :: float64), 0 :: float64);

    test_prefix = "GeneralizedLinearModelAIC(Gaussian)";
    test (test_prefix, glm_test_gauss_aic (0 :: float32), 0 :: float32);
    test (test_prefix, glm_test_gauss_aic (0 :: float64), 0 :: float64);

    test_prefix = "GeneralizedLinearModelAIC(Binomial)";
    test (test_prefix, glm_test_binomial_aic (0 :: float32), 0 :: float32);
    test (test_prefix, glm_test_binomial_aic (0 :: float64), 0 :: float64);

    test_report ();
}
